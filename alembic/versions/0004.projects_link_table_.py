"""Add projects participants link table and created_by column

Revision ID: 0004.add_projects_participants_link_table
Revises: 0003.complete_enum_statuses
Create Date: 2024-12-18 17:18:54.530261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0004.projects_link_table'
down_revision: Union[str, None] = '0003.complete_enum_statuses'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_project_link',
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('project_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('user_id', 'project_id')
                    )
    op.add_column('projects', sa.Column('created_by', sa.UUID(), nullable=True, comment='Создатель проекта'))

    op.execute('UPDATE projects SET created_by = (SELECT id FROM users LIMIT 1)')

    op.alter_column('projects', 'created_by', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('projects', 'created_by')
    op.drop_table('user_project_link')
    # ### end Alembic commands ###
