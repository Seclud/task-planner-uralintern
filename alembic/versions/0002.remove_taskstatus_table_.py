"""empty message

Revision ID: 0002.remove_taskstatus_table
Revises: 0001_initial
Create Date: 2024-12-16 19:19:01.091688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0002.remove_taskstatus_table'
down_revision: Union[str, None] = '0001_initial'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('tasks_status_fkey', 'tasks', type_='foreignkey')
    op.drop_table('taskstatus')

    # Create the new enum type with updated values
    taskstatus_enum = sa.Enum('open', 'inProgress', 'completed', name='taskstatus')
    taskstatus_enum.create(op.get_bind())

    # Map the UUID values to the new enum values
    status_mapping = {
        'ef50faf2-b4e2-4e74-885b-3aef2573bfc5': 'open',
        '5590c430-3ef6-422f-a94a-9d98fad074f5': 'inProgress',
        'd1255d93-6bce-431c-ad64-31b4462fb111': 'completed'
    }

    # Add a temporary column to store the new enum values
    op.add_column('tasks', sa.Column('new_status', taskstatus_enum, nullable=True))

    # Update the new column with the mapped values
    for uuid, status in status_mapping.items():
        op.execute(f"UPDATE tasks SET new_status = '{status}' WHERE status = '{uuid}'")

    # Drop the old status column and rename the new column
    op.drop_column('tasks', 'status')
    op.alter_column('tasks', 'new_status', new_column_name='status', existing_type=taskstatus_enum, nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the new status column and rename the old column
    op.drop_column('tasks', 'status')
    op.alter_column('tasks', 'old_status', new_column_name='status', existing_type=sa.UUID(), nullable=False)

    # Drop the new enum type
    op.execute('DROP TYPE IF EXISTS taskstatus')

    # Create the old taskstatus table

    # ### end Alembic commands ###
